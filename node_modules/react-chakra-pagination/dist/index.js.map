{"version":3,"file":"index.js","sources":["../src/hooks/usePagination.ts","../src/components/NoContent.tsx","../src/components/PaginationItem.tsx","../src/components/Pagination.tsx","../src/components/Table.tsx"],"sourcesContent":["type Options<I = any> = {\n  totalRegisters: number;\n  page: number;\n  items: I[];\n  registersPerPage?: number;\n  siblingsCount?: number;\n};\n\ntype Pagination<I = any> = {\n  pageItems: I[];\n  totalPages: number;\n  registersPerPage: number;\n  currentPage: number;\n  lastPage: number;\n  nextPages: number[];\n  previousPages: number[];\n  siblingsCount: number;\n};\n\nfunction generatePagesArray(from: number, to: number): number[] {\n  return [...new Array(to - from)]\n    .map((_, index) => from + index + 1)\n    .filter((page) => page > 0);\n}\n\nexport function usePagination<I = any>({\n  totalRegisters,\n  page,\n  items,\n  registersPerPage = 10,\n  siblingsCount = 1,\n}: Options<I>): Pagination<I> {\n  const currentPage = page;\n  const lastPage = Math.ceil(totalRegisters / registersPerPage);\n  const totalPages = lastPage === 0 ? 1 : lastPage;\n\n  const previousPages =\n    currentPage > 1\n      ? generatePagesArray(currentPage - 1 - siblingsCount, currentPage - 1)\n      : [];\n  const nextPages =\n    currentPage < lastPage\n      ? generatePagesArray(\n          currentPage,\n          Math.min(currentPage + siblingsCount, lastPage)\n        )\n      : [];\n\n  const pageStart = (page - 1) * registersPerPage;\n  const pageEnd = pageStart + registersPerPage;\n\n  const pageItems = items.slice(pageStart, pageEnd);\n\n  return {\n    pageItems,\n    currentPage,\n    totalPages,\n    lastPage,\n    nextPages,\n    previousPages,\n    registersPerPage,\n    siblingsCount,\n  };\n}\n","import React from \"react\";\nimport { Flex, Icon, Text } from \"@chakra-ui/react\";\nimport { ReactNode } from \"react\";\nimport { IconType } from \"react-icons\";\n\nexport type NoContentProps = {\n  text: string;\n  icon?: IconType;\n  children?: ReactNode;\n  noShadow?: boolean;\n};\n\nexport function NoContent({ icon, text, children, noShadow }: NoContentProps) {\n  return (\n    <Flex\n      mt=\"8\"\n      mb=\"12\"\n      p=\"10\"\n      borderRadius=\"8\"\n      direction=\"column\"\n      align=\"center\"\n      justify=\"center\"\n      boxShadow={noShadow ? \"unset\" : \"sm\"}\n      h=\"100%\"\n    >\n      {icon && (\n        <Flex\n          p=\"6\"\n          align=\"center\"\n          justify=\"baseline\"\n          borderRadius=\"full\"\n          bg=\"gray.50\"\n        >\n          <Icon as={icon} fontSize=\"24\" color=\"teal.700\" />\n        </Flex>\n      )}\n\n      <Text mt=\"4\">{text}</Text>\n\n      {children}\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Button, ThemeTypings } from \"@chakra-ui/react\";\n\ntype PaginationItemProps = {\n  isCurrent?: boolean;\n  page: number;\n  onPageChange: (page: number) => void;\n  colorScheme?: ThemeTypings[\"colorSchemes\"];\n};\n\nexport function PaginationItem({\n  isCurrent = false,\n  page,\n  onPageChange,\n  colorScheme,\n}: PaginationItemProps) {\n  if (isCurrent) {\n    return (\n      <Button\n        size=\"sm\"\n        fontSize=\"xs\"\n        width=\"4\"\n        colorScheme={colorScheme}\n        disabled\n        _disabled={{\n          bg: `${colorScheme}.500`,\n          cursor: \"pointer\",\n        }}\n      >\n        {page}\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      size=\"sm\"\n      fontSize=\"xs\"\n      width=\"4\"\n      bg=\"gray.100\"\n      _hover={{\n        bg: \"gray.300\",\n      }}\n      onClick={() => onPageChange(page)}\n    >\n      {page}\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Stack, Text, ThemeTypings } from \"@chakra-ui/react\";\n\nimport { PaginationItem } from \"./PaginationItem\";\n\ntype PaginationProps = {\n  onPageChange: (page: number) => void;\n  currentPage: number;\n  lastPage: number;\n  nextPages: number[];\n  previousPages: number[];\n  siblingsCount: number;\n  colorScheme?: ThemeTypings[\"colorSchemes\"];\n};\n\nexport function Pagination({\n  currentPage,\n  lastPage,\n  previousPages,\n  nextPages,\n  siblingsCount,\n  onPageChange,\n  colorScheme,\n}: PaginationProps) {\n  return (\n    <Stack direction=\"row\" mt=\"8\" justify=\"flex-end\" align=\"center\" spacing=\"6\">\n      <Stack direction=\"row\" spacing=\"4\">\n        {currentPage > 1 + siblingsCount ? (\n          <>\n            <PaginationItem\n              colorScheme={colorScheme}\n              onPageChange={onPageChange}\n              page={1}\n            />\n            {currentPage > 2 + siblingsCount ? (\n              <Text color=\"gray.300\" w=\"8\" textAlign=\"center\">\n                ...\n              </Text>\n            ) : null}\n          </>\n        ) : null}\n\n        {previousPages.length > 0\n          ? previousPages.map((page) => (\n              <PaginationItem\n                colorScheme={colorScheme}\n                onPageChange={onPageChange}\n                page={page}\n                key={page}\n              />\n            ))\n          : null}\n\n        <PaginationItem\n          colorScheme={colorScheme}\n          onPageChange={onPageChange}\n          page={currentPage}\n          isCurrent\n        />\n\n        {nextPages.length > 0\n          ? nextPages.map((page) => (\n              <PaginationItem\n                colorScheme={colorScheme}\n                onPageChange={onPageChange}\n                page={page}\n                key={page}\n              />\n            ))\n          : null}\n\n        {currentPage + siblingsCount < lastPage ? (\n          <>\n            {currentPage + 1 + siblingsCount < lastPage ? (\n              <Text color=\"gray.300\" w=\"8\" textAlign=\"center\">\n                ...\n              </Text>\n            ) : null}\n            <PaginationItem\n              colorScheme={colorScheme}\n              onPageChange={onPageChange}\n              page={lastPage}\n            />\n          </>\n        ) : null}\n      </Stack>\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport {\n  Table as ChakraTable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Box,\n  ThemeTypings,\n} from \"@chakra-ui/react\";\nimport { Column, useTable } from \"react-table\";\nimport { usePagination } from \"../hooks/usePagination\";\nimport { MdBrokenImage } from \"react-icons/md\";\n\nimport { NoContentProps, NoContent } from \"./NoContent\";\nimport { Pagination } from \"./Pagination\";\n\ntype DataType = {\n  [key: string]: JSX.Element | string;\n};\n\ntype EmptyMessage = Partial<NoContentProps>;\n\ninterface TableProps {\n  columns: Column<DataType>[];\n  data: DataType[];\n  page: number;\n  totalRegisters: number;\n  onPageChange: (page: number) => void;\n  colorScheme?: ThemeTypings[\"colorSchemes\"];\n  emptyData?: EmptyMessage;\n}\n\nexport function Table({\n  page,\n  onPageChange,\n  totalRegisters,\n  data,\n  columns,\n  colorScheme = \"teal\",\n  emptyData,\n}: TableProps) {\n  const pagination = usePagination({\n    totalRegisters,\n    page,\n    items: data,\n  });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data: pagination.pageItems });\n\n  if (data.length === 0) {\n    return (\n      <NoContent\n        {...emptyData}\n        icon={emptyData?.icon ?? MdBrokenImage}\n        text={emptyData?.text ?? \"Nenhum dado para ser exibido.\"}\n      >\n        {emptyData?.children ?? null}\n      </NoContent>\n    );\n  }\n\n  return (\n    <Box py=\"6\" px=\"8\" borderRadius=\"8\" w=\"full\" h=\"100%\">\n      <ChakraTable {...getTableProps()}>\n        <Thead>\n          {headerGroups.map((headerGroup) => (\n            <Tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n              {headerGroup.headers.map((column) => (\n                <React.Fragment key={column.id}>\n                  <Th {...column.getHeaderProps()}>\n                    {column.render(\"Header\")}\n                  </Th>\n                </React.Fragment>\n              ))}\n            </Tr>\n          ))}\n        </Thead>\n\n        <Tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <Tr {...row.getRowProps()} key={row.id}>\n                {row.cells.map((cell, index) => (\n                  <React.Fragment key={cell.column.id + index}>\n                    <Td {...cell.getCellProps()}>{cell.render(\"Cell\")}</Td>\n                  </React.Fragment>\n                ))}\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </ChakraTable>\n\n      <Pagination\n        {...pagination}\n        colorScheme={colorScheme}\n        onPageChange={onPageChange}\n      />\n    </Box>\n  );\n}\n"],"names":["React","Flex","Icon","Text","Button","Stack","useTable","MdBrokenImage","Box","ChakraTable","Thead","Tr","Th","Tbody","Td"],"mappings":"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"}